services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  ##################
  # Twig extensions
  ##################

  # Dump
  twig_extension_bundle.debug_extension:
    class: Twig\Extension\DebugExtension
    tags:
      - { name: twig.extension }

  # Расширенный var_dump.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\VarDumpExtension:
    tags:
      - { name: twig.extension }

  twig_extension_bundle.twig_array:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\ArrayExtension
    tags:
      - { name: twig.extension }

  # Различные хэлперы, связанные с сервис-контейнером.
  twig_extension_bundle.container:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\ContainerTwigExtension
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # Глобальные переменные. Секция globals конфигурации twig.
  twig_extension_bundle.global_extension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\GlobalsExtension
    arguments: ['%twig%']
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # Строковые фильтры и функции.
  twig_extension_bundle.string_extension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\StringTwigExtension
    tags:
      - { name: twig.extension }

  # Определение мобил.
  twig_extension_bundle.mobile.detect.extension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\MobileDetectExtension
    arguments: ['@mobile.detector']
    tags:
      - { name: twig.extension }

  # controller()
  twig_extension_bundle.controller:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\ControllerExtension
    tags:
      - { name: twig.extension }

  # json_decode.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\JsonDecodeExtension:
    tags:
      - { name: twig.extension }

  Prokl\TwigExtensionsPackBundle\Twig\Extensions\JoinExtension:
    tags:
      - { name: twig.extension }

  # render_service.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\RenderServiceExtension:
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # inline_css.
  Twig\Extra\CssInliner\CssInlinerExtension:
    tags:
      - { name: twig.extension }

  # html_classes.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\HtmlExtension:
    tags:
      - { name: twig.extension }

  # Пути роутов.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\RouteExtension:
    arguments: ['@routes.collection', '@parameter_bag']
    tags:
      - { name: twig.extension }

  # The "sortByField" filter sorts an array of entries (objects or arrays) by the specified field's value
  # Usage: {% for entry in master.entries|sortbyfield('ordering', 'desc') %}
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\SortByFieldExtension:
    tags:
      - { name: twig.extension }

  ###### Прочее ##########

  # Пути к сборке Webpack.
  twig_extension_bundle.build_path:
    class: Prokl\TwigExtensionsPackBundle\Services\Assets
    factory: ['Prokl\TwigExtensionsPackBundle\Services\Assets', 'pathBuild']
    arguments: ['%kernel.debug%', '%twig_extension_bundle.build_dev_path%', '%twig_extension_bundle.build_production_path%']

  twig_extension_bundle.assets:
    class: Prokl\TwigExtensionsPackBundle\Services\Assets
    arguments: ['@twig_extension_bundle.build_path']

  twig_extension_bundle.twig.paths:
    class: Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyTwigPath
    arguments: ['@routing.utils', '@parameter_bag']

  Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyTwigPath: '@twig_extension_bundle.twig.paths'

  twig_extension_bundle.encore:
    class: Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyEncore
    arguments: ['@twig_extension_bundle.assets']

  Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyEncore: '@twig_extension_bundle.encore'