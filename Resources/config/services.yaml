services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  # Runtime configurator
  twig_runtime_configurator:
    class: Prokl\TwigExtensionsPackBundle\Services\TwigRuntimeConfigurator
    arguments:
      - '@twig.instance'
      - !tagged_iterator twig.runtime

  twig_runtime_configurator.init:
    class: Prokl\TwigExtensionsPackBundle\Services\TwigRuntimeConfigurator
    factory: ['@twig_runtime_configurator', 'register']
    tags:
      - { name: service.bootstrap }

  twig_extension_bundle.globals_config:
    class: Prokl\TwigExtensionsPackBundle\Services\GlobalsTwigNative
    arguments: ['@twig.instance', '%twig.globals%']
    calls:
      - setContainer: ['@service_container']

  twig_extension_bundle.config_init:
    class: Prokl\TwigExtensionsPackBundle\Services\GlobalsTwigNative
    factory: ['@twig_extension_bundle.globals_config', 'addGlobals']
    tags:
      - { name: 'service.bootstrap', priority: 500 }

  ##################
  # Twig extensions
  ##################

  # Dump
  twig_extension_bundle.debug_extension:
    class: Twig\Extension\DebugExtension
    tags:
      - { name: twig.extension }

  # Расширенный var_dump.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\VarDumpExtension:
    tags:
      - { name: twig.extension }

  twig_extension_bundle.twig_array:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\ArrayExtension
    tags:
      - { name: twig.extension }

  # Различные хэлперы, связанные с сервис-контейнером.
  twig_extension_bundle.container:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\ContainerTwigExtension
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # Глобальные переменные. Секция globals конфигурации twig.
  twig_extension_bundle.global_extension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\GlobalsExtension
    arguments: ['%twig_config%']
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # Строковые фильтры и функции.
  twig_extension_bundle.string_extension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\StringTwigExtension
    tags:
      - { name: twig.extension }

  # Определение мобил.
  twig_extension_bundle.mobile.detect.extension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\MobileDetectExtension
    arguments: ['@mobile.detector']
    tags:
      - { name: twig.extension }

  # controller()
  twig_extension_bundle.controller:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\ControllerExtension
    tags:
      - { name: twig.extension }

  # json_decode.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\JsonDecodeExtension:
    tags:
      - { name: twig.extension }

  Prokl\TwigExtensionsPackBundle\Twig\Extensions\JoinExtension:
    tags:
      - { name: twig.extension }

  # render_service.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\RenderServiceExtension:
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # inline_css.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\CssInlinerExtension:
    tags:
      - { name: twig.extension }

  # html_classes.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\HtmlExtension:
    tags:
      - { name: twig.extension }

  # Пути роутов.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\RouteExtension:
    arguments: ['@routes.collection', '@parameter_bag']
    tags:
      - { name: twig.extension }

  # The "sortByField" filter sorts an array of entries (objects or arrays) by the specified field's value
  # Usage: {% for entry in master.entries|sortbyfield('ordering', 'desc') %}
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\SortByFieldExtension:
    tags:
      - { name: twig.extension }

  # Symfony Encore.
  Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyEncoreExtension:
    arguments: ['@twig_extension_bundle.assets']
    tags:
      - { name: twig.extension }

  Prokl\TwigExtensionsPackBundle\Twig\Extensions\SymfonyExtensions:
    arguments: ['@twig_extension_bundle.security.csrf.token_manager']
    tags:
      - { name: twig.extension }

  Prokl\TwigExtensionsPackBundle\Twig\Extensions\Wordpress\RenderController:
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # get_static
  Prokl\TwigExtensionsPackBundle\Twig\Functions\TwigStaticReflection:
    tags:
      - { name: twig.extension }

  # include
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\IncludeExtension:
    arguments: ['%kernel.project_dir%', '@filesystem']
    tags:
      - { name: twig.extension }

  # Cache extension
  Twig\Extra\Cache\CacheExtension:
    class: Twig\Extra\Cache\CacheExtension
    tags:
      - { name: twig.extension }

  # Glob
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\Glob:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\Glob
    arguments: ['%kernel.project_dir%']
    tags:
      - { name: twig.extension }

  # Youtube
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\YouTubeExtension:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\YouTubeExtension
    tags:
      - { name: twig.extension }

  ##########
  # Runtimes
  ##########

  # Cache runtime
  twig.cache.runtime:
    class: Prokl\TwigExtensionsPackBundle\Services\Runtime\CacheRuntimeLoader
    arguments:
      - '@cache.app'
    tags:
      - { name: twig.runtime }

  ###### Прочее ##########

  # Трансфер переменных приложения в Твиг.
  app.twig.variable:
    class: Prokl\TwigExtensionsPackBundle\Services\Handlers\AppVariable
    arguments: ['@session.instance', '@global.request']

  Prokl\TwigExtensionsPackBundle\Services\Handlers\AppVariable: '@app.twig.variable'

  # Нативные глобальные переменные Твига.
  native.app.twig.variable:
    class: Symfony\Bridge\Twig\AppVariable
    calls:
      - [setEnvironment, ["%kernel.environment%"]]
      - [setDebug, ["%kernel.debug%"]]
      - [setRequestStack, ['@request_stack']]

  Symfony\Bridge\Twig\AppVariable: '@native.app.twig.variable'

  # Symfony/twig-bridge
  Symfony\Bridge\Twig\Mime\BodyRenderer:
    class: Symfony\Bridge\Twig\Mime\BodyRenderer
    arguments: ['@twig.instance']

  Symfony\Component\Mime\BodyRendererInterface: '@Symfony\Bridge\Twig\Mime\BodyRenderer'

  # Пути к сборке Webpack.
  twig_extension_bundle.build_path:
    class: Prokl\TwigExtensionsPackBundle\Services\Assets
    factory: ['Prokl\TwigExtensionsPackBundle\Services\Assets', 'pathBuild']
    arguments: ['%kernel.debug%', '%twig_extension_bundle.build_dev_path%', '%twig_extension_bundle.build_production_path%']

  twig_extension_bundle.assets:
    class: Prokl\TwigExtensionsPackBundle\Services\Assets
    arguments: ['%kernel.project_dir%', '@twig_extension_bundle.build_path']

  twig_extension_bundle.security.csrf.token_manager:
    class: Symfony\Component\Security\Csrf\CsrfTokenManager

  ###### Unused ##########

  twig_extension_bundle.encore:
    class: Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyEncore
    arguments: ['%kernel.project_dir%', '@twig_extension_bundle.assets']

  Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyEncore: '@twig_extension_bundle.encore'