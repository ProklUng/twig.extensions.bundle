services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  # Глобальные переменные Twig.
  twig.variables:
    class: Prokl\TwigExtensionsPackBundle\Services\ConfigureVariables
    arguments: ['@app.twig.variable']

  Prokl\TwigExtensionsPackBundle\Services\ConfigureVariables: '@twig.variables'

  twig.variables.init.hook:
    class: Prokl\TwigExtensionsPackBundle\Services\ConfigureVariables
    factory: ['@twig.variables', 'hooksInit']
    tags: ['service.bootstrap']

  twig_extension_bundle.wordpress_config:
    class: Prokl\TwigExtensionsPackBundle\Services\GlobalsTwig
    arguments: ['%twig.globals%']
    calls:
      - setContainer: ['@service_container']

  twig_extension_bundle.config_init_hook:
    class: Prokl\TwigExtensionsPackBundle\Services\GlobalsTwig
    factory: ['@twig_extension_bundle.wordpress_config', 'hooksInit']
    tags: ['service.bootstrap']

  ##################
  # Twig extensions
  ##################

  Prokl\TwigExtensionsPackBundle\Twig\Functions\SymfonyTwigPath:
    arguments: ['@routing.utils', '@parameter_bag']
    tags:
      - { name: twig.extension }

  # Функции Wordpress.
  wordpress.functions:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\Wordpress\WordpressExtension
    tags:
      - { name: twig.extension }

  # apply_filter.
  Prokl\TwigExtensionsPackBundle\Twig\Extensions\ApplyFilterExtension:
    tags:
      - { name: twig.extension }

  # render(). Работает только при установленном роутере.
  twig_extension_bundle.render:
    class: Prokl\TwigExtensionsPackBundle\Twig\Extensions\RenderExtension
    arguments:
      - '@dispatcher.controller'
      - '@routing.utils'
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }